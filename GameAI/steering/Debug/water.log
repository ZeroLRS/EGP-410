Build started 9/24/2016 11:20:55 PM.
     1>Project "D:\Downloads\EGP-410-master\EGP-410-master\GameAI\steering\water.vcxproj" on node 2 (Build target(s)).
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\CL.exe /c /I..\..\DeanLib /I"..\..\External Libs\Allegro5\include" /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _CONSOLE /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc140.pdb" /Gd /TP /analyze- /errorReport:prompt UnitManager.cpp
         UnitManager.cpp
     1>c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple(829): error C2512: 'KinematicUnit::KinematicUnit': no appropriate default constructor available
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple(843): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<unsigned int>)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit,
                     _Tuple1=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,
                     _Tuple2=std::tuple<>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\tuple(843): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<unsigned int>)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit,
                     _Tuple1=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,
                     _Tuple2=std::tuple<>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(657): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(657): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(775): note: see reference to function template instantiation 'void std::allocator<_Other>::construct<_Objty,const std::piecewise_construct_t&,_Ty,std::tuple<>>(_Objty *,const std::piecewise_construct_t &,_Ty &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>,
                     _Objty=std::pair<const std::string,KinematicUnit>,
                     _Ty=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(775): note: see reference to function template instantiation 'void std::allocator<_Other>::construct<_Objty,const std::piecewise_construct_t&,_Ty,std::tuple<>>(_Objty *,const std::piecewise_construct_t &,_Ty &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>,
                     _Objty=std::pair<const std::string,KinematicUnit>,
                     _Ty=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(920): note: see reference to function template instantiation 'void std::allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::allocator<_Other> &,_Objty *,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>>,
                     _Ty=std::pair<const std::string,KinematicUnit>,
                     _Other=std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>,
                     _Objty=std::pair<const std::string,KinematicUnit>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(920): note: see reference to function template instantiation 'void std::allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::allocator<_Other> &,_Objty *,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>>,
                     _Ty=std::pair<const std::string,KinematicUnit>,
                     _Other=std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>,
                     _Objty=std::pair<const std::string,KinematicUnit>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(896): note: see reference to function template instantiation 'void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Ty *,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>,
                     _Ty=std::pair<const std::string,KinematicUnit>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(896): note: see reference to function template instantiation 'void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Ty *,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::string,KinematicUnit>,void *>,
                     _Ty=std::pair<const std::string,KinematicUnit>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1119): note: see reference to function template instantiation 'std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit,
                     _Traits=std::_Tmap_traits<std::string,KinematicUnit,std::less<std::string>,std::allocator<std::pair<const std::string,KinematicUnit>>,false>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1119): note: see reference to function template instantiation 'std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit,
                     _Traits=std::_Tmap_traits<std::string,KinematicUnit,std::less<std::string>,std::allocator<std::pair<const std::string,KinematicUnit>>,false>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(348): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit,
                     _Pr=std::less<std::string>,
                     _Alloc=std::allocator<std::pair<const std::string,KinematicUnit>>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(348): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit,
                     _Pr=std::less<std::string>,
                     _Alloc=std::allocator<std::pair<const std::string,KinematicUnit>>
                 ]
         c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(340): note: while compiling class template member function 'KinematicUnit &std::map<std::string,KinematicUnit,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)'
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit
                 ]
         d:\downloads\egp-410-master\egp-410-master\gameai\steering\unitmanager.cpp(62): note: see reference to function template instantiation 'KinematicUnit &std::map<std::string,KinematicUnit,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit
                 ]
         d:\downloads\egp-410-master\egp-410-master\gameai\steering\unitmanager.cpp(57): note: see reference to class template instantiation 'std::map<std::string,KinematicUnit,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' being compiled
                 with
                 [
                     _Kty=std::string,
                     _Ty=KinematicUnit
                 ]
     1>Done Building Project "D:\Downloads\EGP-410-master\EGP-410-master\GameAI\steering\water.vcxproj" (Build target(s)) -- FAILED.

Build FAILED.

Time Elapsed 00:00:01.07
